{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\full react course\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupid]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport SingleMeetup from \"../../components/meetups/SingleMeetup\";\n\nconst MeetupPage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SingleMeetup, {\n      image: props.image,\n      title: props.title,\n      address: props.address,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}; // ############################ SERVER SIDE CODE I.E WILL NOT BE SHOWN IN CLIENT SIDE.\n\n\nconst connectToDB = async () => {\n  const url = `mongodb+srv://test:test123@realmcluster.8jza7.mongodb.net/myFirstDatabase?retryWrites=true&w=majority`;\n  const client = await MongoClient.connect(url);\n  const db = client.db();\n  const collections = db.collection(\"meetups\");\n  return collections;\n};\n\nexport const getStaticPaths = async () => {\n  const collections = await connectToDB();\n  const collectionsId = await collections.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: true,\n    paths: collectionsId.map(collectionId => {\n      return {\n        params: {\n          meetupid: collectionId._id.toString()\n        }\n      };\n    })\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupid; // meetupid is file name [inside this]\n\n  const collections = await connectToDB();\n  const singleMeetup = await collections.findOne({\n    _id: ObjectId(meetupId)\n  }); // console.log(meetupId);\n\n  return {\n    props: {\n      id: singleMeetup._id.toString(),\n      title: singleMeetup.title,\n      image: singleMeetup.image,\n      description: singleMeetup.description,\n      address: singleMeetup.address\n    }\n  };\n};\nexport default MeetupPage;","map":{"version":3,"sources":["D:/full react course/06-onwards-to-a-bigger-project-starting-project/pages/[meetupid]/index.js"],"names":["MongoClient","ObjectId","Fragment","Head","SingleMeetup","MeetupPage","props","title","description","image","address","connectToDB","url","client","connect","db","collections","collection","getStaticPaths","collectionsId","find","_id","toArray","fallback","paths","map","collectionId","params","meetupid","toString","getStaticProps","context","meetupId","singleMeetup","findOne","id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAED,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEF,KAAK,CAACG,KADf;AAEE,MAAA,KAAK,EAAEH,KAAK,CAACC,KAFf;AAGE,MAAA,OAAO,EAAED,KAAK,CAACI,OAHjB;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACE;AAJrB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD,C,CAiBA;;;AAEA,MAAMG,WAAW,GAAG,YAAY;AAC9B,QAAMC,GAAG,GAAI,uGAAb;AAEA,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoBF,GAApB,CAArB;AAEA,QAAMG,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,WAAW,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAApB;AAEA,SAAOD,WAAP;AACD,CATD;;AAWA,OAAO,MAAME,cAAc,GAAG,YAAY;AACxC,QAAMF,WAAW,GAAG,MAAML,WAAW,EAArC;AAEA,QAAMQ,aAAa,GAAG,MAAMH,WAAW,CAACI,IAAZ,CAAiB,EAAjB,EAAqB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAArB,EAAiCC,OAAjC,EAA5B;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,KAAK,EAAEL,aAAa,CAACM,GAAd,CAAmBC,YAAD,IAAkB;AACzC,aAAO;AACLC,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAEF,YAAY,CAACL,GAAb,CAAiBQ,QAAjB;AADJ;AADH,OAAP;AAKD,KANM;AAFF,GAAP;AAUD,CAfM;AAiBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAD+C,CACL;;AAE1C,QAAMZ,WAAW,GAAG,MAAML,WAAW,EAArC;AAEA,QAAMsB,YAAY,GAAG,MAAMjB,WAAW,CAACkB,OAAZ,CAAoB;AAAEb,IAAAA,GAAG,EAAEpB,QAAQ,CAAC+B,QAAD;AAAf,GAApB,CAA3B,CAL+C,CAM/C;;AAEA,SAAO;AACL1B,IAAAA,KAAK,EAAE;AACL6B,MAAAA,EAAE,EAAEF,YAAY,CAACZ,GAAb,CAAiBQ,QAAjB,EADC;AAELtB,MAAAA,KAAK,EAAE0B,YAAY,CAAC1B,KAFf;AAGLE,MAAAA,KAAK,EAAEwB,YAAY,CAACxB,KAHf;AAILD,MAAAA,WAAW,EAAEyB,YAAY,CAACzB,WAJrB;AAKLE,MAAAA,OAAO,EAAEuB,YAAY,CAACvB;AALjB;AADF,GAAP;AASD,CAjBM;AAmBP,eAAeL,UAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\n\r\nimport SingleMeetup from \"../../components/meetups/SingleMeetup\";\r\n\r\nconst MeetupPage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.title}</title>\r\n        <meta name=\"description\" content={props.description} />\r\n      </Head>\r\n      <SingleMeetup\r\n        image={props.image}\r\n        title={props.title}\r\n        address={props.address}\r\n        description={props.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n// ############################ SERVER SIDE CODE I.E WILL NOT BE SHOWN IN CLIENT SIDE.\r\n\r\nconst connectToDB = async () => {\r\n  const url = `mongodb+srv://test:test123@realmcluster.8jza7.mongodb.net/myFirstDatabase?retryWrites=true&w=majority`;\r\n\r\n  const client = await MongoClient.connect(url);\r\n\r\n  const db = client.db();\r\n  const collections = db.collection(\"meetups\");\r\n\r\n  return collections;\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const collections = await connectToDB();\r\n\r\n  const collectionsId = await collections.find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    fallback: true,\r\n    paths: collectionsId.map((collectionId) => {\r\n      return {\r\n        params: {\r\n          meetupid: collectionId._id.toString(),\r\n        },\r\n      };\r\n    }),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params.meetupid; // meetupid is file name [inside this]\r\n\r\n  const collections = await connectToDB();\r\n\r\n  const singleMeetup = await collections.findOne({ _id: ObjectId(meetupId) });\r\n  // console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      id: singleMeetup._id.toString(),\r\n      title: singleMeetup.title,\r\n      image: singleMeetup.image,\r\n      description: singleMeetup.description,\r\n      address: singleMeetup.address,\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupPage;\r\n"]},"metadata":{},"sourceType":"module"}